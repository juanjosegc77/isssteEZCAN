package interfaz;

import database.HelperDB;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/*
 * isssteEZCAN
 * Departamento de Investigación en Biología Molecular y Medicina Genómica 
 * Hospital Regional "Lic. Adolfo López Mateos" ISSSTE
 * Desarrollador: IB Juan José Guzmán Cruz
 * Responsable del proyecto: DC Osvaldo Erick Sánchez Hernández
 */
public class Personales extends javax.swing.JDialog {

    private final DefaultTableModel model;
    private final HelperDB helper;
    private final Tablas tablas;
    
    private final Date date, time;
    
    private int reg_paciente, paciente;
    
    public Personales(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        this.setAlwaysOnTop(true);
        this.setLocationRelativeTo(null);
        
        
        this.date = new Date();
        this.time = new Date();
        
        this.model = new DefaultTableModel();
        this.helper = new HelperDB();
        this.tablas = new Tablas();
        
        this.reg_paciente = 0;
        this.paciente = 0;
        
        iniciarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgSexo = new javax.swing.ButtonGroup();
        bgTipo = new javax.swing.ButtonGroup();
        bgFuma = new javax.swing.ButtonGroup();
        bgAlcohol = new javax.swing.ButtonGroup();
        bgInfarto = new javax.swing.ButtonGroup();
        bgInfartoPrevio = new javax.swing.ButtonGroup();
        bgEVC = new javax.swing.ButtonGroup();
        bgAnginaPrevia = new javax.swing.ButtonGroup();
        bgHipoglicemiantes = new javax.swing.ButtonGroup();
        bgHipolipemiantes = new javax.swing.ButtonGroup();
        bgDiabetes = new javax.swing.ButtonGroup();
        bgAnginaEstable = new javax.swing.ButtonGroup();
        bgAnginaInestable = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        lPaciente = new javax.swing.JLabel();
        lEdad = new javax.swing.JLabel();
        lTipo = new javax.swing.JLabel();
        lSexo = new javax.swing.JLabel();
        lPeso = new javax.swing.JLabel();
        lTalla = new javax.swing.JLabel();
        lIMC = new javax.swing.JLabel();
        lCintura = new javax.swing.JLabel();
        tfPaciente = new javax.swing.JTextField();
        tfEdad = new javax.swing.JTextField();
        rbMasculino = new javax.swing.JRadioButton();
        rbFemenino = new javax.swing.JRadioButton();
        rbControl = new javax.swing.JRadioButton();
        rbCaso = new javax.swing.JRadioButton();
        tfPeso = new javax.swing.JTextField();
        tfTalla = new javax.swing.JTextField();
        tfIMC = new javax.swing.JTextField();
        tfCintura = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        lFuma = new javax.swing.JLabel();
        lAlcohol = new javax.swing.JLabel();
        lInfarto = new javax.swing.JLabel();
        lAnginaEstable = new javax.swing.JLabel();
        lAnginaInestable = new javax.swing.JLabel();
        lInfartoPrevio = new javax.swing.JLabel();
        lEVC = new javax.swing.JLabel();
        lAnginaPrevia = new javax.swing.JLabel();
        lHipoglicemiantes = new javax.swing.JLabel();
        lHipolipemiantes = new javax.swing.JLabel();
        rbFumaSI = new javax.swing.JRadioButton();
        rbFumaNO = new javax.swing.JRadioButton();
        rbAlcoholNO = new javax.swing.JRadioButton();
        rbAlcoholSI = new javax.swing.JRadioButton();
        rbInfartoNO = new javax.swing.JRadioButton();
        rbInfartoSI = new javax.swing.JRadioButton();
        rbInfartoPrevioSI = new javax.swing.JRadioButton();
        rbInfartoPrevioNO = new javax.swing.JRadioButton();
        rbEVCSI = new javax.swing.JRadioButton();
        rbAnginaPreviaSI = new javax.swing.JRadioButton();
        rbHipoglicemiantesSI = new javax.swing.JRadioButton();
        rbHipolipemiantesSI = new javax.swing.JRadioButton();
        rbEVCNO = new javax.swing.JRadioButton();
        rbAnginaPreviaNO = new javax.swing.JRadioButton();
        rbHipoglicemiantesNO = new javax.swing.JRadioButton();
        rbHipolipemiantesNO = new javax.swing.JRadioButton();
        rbDiabetesSI = new javax.swing.JRadioButton();
        rbDiabetesNO = new javax.swing.JRadioButton();
        lDiabetes = new javax.swing.JLabel();
        rbAnginaEstableSI = new javax.swing.JRadioButton();
        rbAnginaEstableNO = new javax.swing.JRadioButton();
        rbAnginaInestableSI = new javax.swing.JRadioButton();
        rbAnginaInestableNO = new javax.swing.JRadioButton();
        bSalir = new javax.swing.JButton();
        bAvanzar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tBioquimica = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                if(colIndex==1){
                    return true;
                }
                return false; //Disallow the editing of any cell
            }
        };
        bPruebas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setMinimumSize(new java.awt.Dimension(1350, 750));
        setModal(true);
        setName("dDatos"); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "DATOS DEL PACIENTE", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 14))); // NOI18N

        lPaciente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lPaciente.setText("PACIENTE");

        lEdad.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lEdad.setText("EDAD");

        lTipo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lTipo.setText("TIPO DE PACIENTE");

        lSexo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lSexo.setText("SEXO");

        lPeso.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lPeso.setText("PESO (kg)");

        lTalla.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lTalla.setText("TALLA (m)");

        lIMC.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lIMC.setText("IMC");

        lCintura.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lCintura.setText("CONTORNO DE CINTURA (cm)");

        tfPaciente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfPaciente.setNextFocusableComponent(tfEdad);
        tfPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfPacienteKeyTyped(evt);
            }
        });

        tfEdad.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfEdad.setNextFocusableComponent(rbMasculino);

        bgSexo.add(rbMasculino);
        rbMasculino.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbMasculino.setSelected(true);
        rbMasculino.setText("Masculino");
        rbMasculino.setNextFocusableComponent(rbFemenino);

        bgSexo.add(rbFemenino);
        rbFemenino.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbFemenino.setText("Femenino");
        rbFemenino.setNextFocusableComponent(rbControl);

        bgTipo.add(rbControl);
        rbControl.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbControl.setSelected(true);
        rbControl.setText("Control");
        rbControl.setNextFocusableComponent(rbCaso);

        bgTipo.add(rbCaso);
        rbCaso.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbCaso.setText("Caso");
        rbCaso.setNextFocusableComponent(tfTalla);

        tfPeso.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfPeso.setNextFocusableComponent(tfIMC);

        tfTalla.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfTalla.setNextFocusableComponent(tfPeso);

        tfIMC.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfIMC.setNextFocusableComponent(tfCintura);

        tfCintura.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfCintura.setNextFocusableComponent(rbFumaSI);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lPaciente)
                        .addGap(20, 20, 20)
                        .addComponent(tfPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(lEdad))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lTalla)
                        .addGap(20, 20, 20)
                        .addComponent(tfTalla, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(lPeso)))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(tfEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(lSexo)
                        .addGap(20, 20, 20)
                        .addComponent(rbMasculino)
                        .addGap(20, 20, 20)
                        .addComponent(rbFemenino)
                        .addGap(50, 50, 50)
                        .addComponent(lTipo)
                        .addGap(20, 20, 20)
                        .addComponent(rbControl)
                        .addGap(20, 20, 20)
                        .addComponent(rbCaso))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(tfPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(lIMC)
                        .addGap(20, 20, 20)
                        .addComponent(tfIMC, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(lCintura)
                        .addGap(20, 20, 20)
                        .addComponent(tfCintura, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(239, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lPaciente)
                    .addComponent(tfPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lEdad)
                    .addComponent(tfEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lSexo)
                    .addComponent(rbMasculino)
                    .addComponent(rbFemenino)
                    .addComponent(lTipo)
                    .addComponent(rbControl)
                    .addComponent(rbCaso))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lTalla)
                    .addComponent(tfTalla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lPeso)
                    .addComponent(tfPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lIMC)
                    .addComponent(tfIMC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lCintura)
                    .addComponent(tfCintura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "ANTECEDENTES", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 14))); // NOI18N

        lFuma.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lFuma.setText("FUMA");

        lAlcohol.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lAlcohol.setText("BEBE ALCOHOL");

        lInfarto.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lInfarto.setText("INFARTO");

        lAnginaEstable.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lAnginaEstable.setText("ANGINA ESTABLE");

        lAnginaInestable.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lAnginaInestable.setText("ANGINA INESTABLE");

        lInfartoPrevio.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lInfartoPrevio.setText("INFARTO PREVIO");

        lEVC.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lEVC.setText("EVC");

        lAnginaPrevia.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lAnginaPrevia.setText("ANGINA PREVIA");

        lHipoglicemiantes.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lHipoglicemiantes.setText("HIPOGLICEMIANTES");

        lHipolipemiantes.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lHipolipemiantes.setText("HIPOLIPEMIANTES");

        bgFuma.add(rbFumaSI);
        rbFumaSI.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbFumaSI.setText("SI");

        bgFuma.add(rbFumaNO);
        rbFumaNO.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbFumaNO.setSelected(true);
        rbFumaNO.setText("NO");

        bgAlcohol.add(rbAlcoholNO);
        rbAlcoholNO.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbAlcoholNO.setSelected(true);
        rbAlcoholNO.setText("NO");

        bgAlcohol.add(rbAlcoholSI);
        rbAlcoholSI.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbAlcoholSI.setText("SI");

        bgInfarto.add(rbInfartoNO);
        rbInfartoNO.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbInfartoNO.setSelected(true);
        rbInfartoNO.setText("NO");

        bgInfarto.add(rbInfartoSI);
        rbInfartoSI.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbInfartoSI.setText("SI");

        bgInfartoPrevio.add(rbInfartoPrevioSI);
        rbInfartoPrevioSI.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbInfartoPrevioSI.setText("SI");

        bgInfartoPrevio.add(rbInfartoPrevioNO);
        rbInfartoPrevioNO.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbInfartoPrevioNO.setSelected(true);
        rbInfartoPrevioNO.setText("NO");

        bgEVC.add(rbEVCSI);
        rbEVCSI.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbEVCSI.setText("SI");

        bgAnginaPrevia.add(rbAnginaPreviaSI);
        rbAnginaPreviaSI.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbAnginaPreviaSI.setText("SI");

        bgHipoglicemiantes.add(rbHipoglicemiantesSI);
        rbHipoglicemiantesSI.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbHipoglicemiantesSI.setText("SI");

        bgHipolipemiantes.add(rbHipolipemiantesSI);
        rbHipolipemiantesSI.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbHipolipemiantesSI.setText("SI");

        bgEVC.add(rbEVCNO);
        rbEVCNO.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbEVCNO.setSelected(true);
        rbEVCNO.setText("NO");

        bgAnginaPrevia.add(rbAnginaPreviaNO);
        rbAnginaPreviaNO.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbAnginaPreviaNO.setSelected(true);
        rbAnginaPreviaNO.setText("NO");

        bgHipoglicemiantes.add(rbHipoglicemiantesNO);
        rbHipoglicemiantesNO.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbHipoglicemiantesNO.setSelected(true);
        rbHipoglicemiantesNO.setText("NO");

        bgHipolipemiantes.add(rbHipolipemiantesNO);
        rbHipolipemiantesNO.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbHipolipemiantesNO.setSelected(true);
        rbHipolipemiantesNO.setText("NO");

        bgDiabetes.add(rbDiabetesSI);
        rbDiabetesSI.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbDiabetesSI.setText("SI");

        bgDiabetes.add(rbDiabetesNO);
        rbDiabetesNO.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbDiabetesNO.setSelected(true);
        rbDiabetesNO.setText("NO");
        rbDiabetesNO.setNextFocusableComponent(tBioquimica);

        lDiabetes.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lDiabetes.setText("DIABETES");

        bgAnginaEstable.add(rbAnginaEstableSI);
        rbAnginaEstableSI.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbAnginaEstableSI.setText("SI");

        bgAnginaEstable.add(rbAnginaEstableNO);
        rbAnginaEstableNO.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbAnginaEstableNO.setSelected(true);
        rbAnginaEstableNO.setText("NO");

        bgAnginaInestable.add(rbAnginaInestableSI);
        rbAnginaInestableSI.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbAnginaInestableSI.setText("SI");

        bgAnginaInestable.add(rbAnginaInestableNO);
        rbAnginaInestableNO.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbAnginaInestableNO.setSelected(true);
        rbAnginaInestableNO.setText("NO");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lFuma)
                    .addComponent(lAlcohol)
                    .addComponent(lInfarto)
                    .addComponent(lAnginaEstable)
                    .addComponent(lAnginaInestable)
                    .addComponent(lInfartoPrevio)
                    .addComponent(lEVC)
                    .addComponent(lAnginaPrevia)
                    .addComponent(lHipoglicemiantes)
                    .addComponent(lHipolipemiantes)
                    .addComponent(lDiabetes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbFumaSI)
                            .addComponent(rbAlcoholSI)
                            .addComponent(rbInfartoSI))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbInfartoNO)
                            .addComponent(rbFumaNO)
                            .addComponent(rbAlcoholNO)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(rbInfartoPrevioSI)
                        .addGap(20, 20, 20)
                        .addComponent(rbInfartoPrevioNO))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbEVCSI)
                            .addComponent(rbAnginaPreviaSI)
                            .addComponent(rbHipoglicemiantesSI)
                            .addComponent(rbHipolipemiantesSI)
                            .addComponent(rbDiabetesSI))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbAnginaPreviaNO)
                            .addComponent(rbEVCNO)
                            .addComponent(rbHipoglicemiantesNO)
                            .addComponent(rbDiabetesNO)
                            .addComponent(rbHipolipemiantesNO)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(rbAnginaEstableSI)
                        .addGap(20, 20, 20)
                        .addComponent(rbAnginaEstableNO))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(rbAnginaInestableSI)
                        .addGap(20, 20, 20)
                        .addComponent(rbAnginaInestableNO)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lFuma)
                    .addComponent(rbFumaSI)
                    .addComponent(rbFumaNO))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lAlcohol)
                    .addComponent(rbAlcoholSI)
                    .addComponent(rbAlcoholNO))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lInfarto)
                    .addComponent(rbInfartoSI)
                    .addComponent(rbInfartoNO))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lAnginaEstable)
                    .addComponent(rbAnginaEstableSI)
                    .addComponent(rbAnginaEstableNO))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lAnginaInestable)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbAnginaInestableSI)
                        .addComponent(rbAnginaInestableNO)))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lInfartoPrevio)
                    .addComponent(rbInfartoPrevioSI)
                    .addComponent(rbInfartoPrevioNO))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lEVC)
                    .addComponent(rbEVCSI)
                    .addComponent(rbEVCNO))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lAnginaPrevia)
                    .addComponent(rbAnginaPreviaSI)
                    .addComponent(rbAnginaPreviaNO))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lHipoglicemiantes)
                    .addComponent(rbHipoglicemiantesSI)
                    .addComponent(rbHipoglicemiantesNO))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lHipolipemiantes)
                    .addComponent(rbHipolipemiantesSI)
                    .addComponent(rbHipolipemiantesNO))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbDiabetesNO)
                        .addComponent(rbDiabetesSI))
                    .addComponent(lDiabetes))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        bSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ic_salir.png"))); // NOI18N
        bSalir.setMaximumSize(new java.awt.Dimension(98, 97));
        bSalir.setMinimumSize(new java.awt.Dimension(98, 97));
        bSalir.setNextFocusableComponent(tfPaciente);
        bSalir.setPreferredSize(new java.awt.Dimension(98, 97));
        bSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                bSalirMouseReleased(evt);
            }
        });

        bAvanzar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ic_avanzar.png"))); // NOI18N
        bAvanzar.setMaximumSize(new java.awt.Dimension(98, 97));
        bAvanzar.setMinimumSize(new java.awt.Dimension(98, 97));
        bAvanzar.setNextFocusableComponent(bSalir);
        bAvanzar.setPreferredSize(new java.awt.Dimension(98, 97));
        bAvanzar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                bAvanzarMouseReleased(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "BIOQUÍMICA", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 14))); // NOI18N

        tBioquimica.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        tBioquimica.setIntercellSpacing(new java.awt.Dimension(5, 2));
        tBioquimica.setNextFocusableComponent(bAvanzar);
        tBioquimica.setOpaque(false);
        tBioquimica.setRowHeight(20);
        tBioquimica.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tBioquimicaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tBioquimica);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        bPruebas.setText("pruebas");
        bPruebas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                bPruebasMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bAvanzar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bSalir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(bPruebas)))))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(bAvanzar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(bPruebas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(112, 112, 112))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(24, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // *********************   VALIDAR DATOS  *********************
    private void tfPacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPacienteKeyTyped
        if(Character.isDigit(evt.getKeyChar()) && this.tfPaciente.getText().length()<6){
        }
        else{
            evt.consume();
        }
    }//GEN-LAST:event_tfPacienteKeyTyped

    // ******************   BOTONES   *******************************
    private void bAvanzarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bAvanzarMouseReleased
        setVisible(false);
        Marcadores marcadores = new Marcadores(new javax.swing.JFrame(), true);
        
        marcadores.setLocationRelativeTo(null);
        marcadores.setVisible(true);
    }//GEN-LAST:event_bAvanzarMouseReleased

    private void bSalirMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSalirMouseReleased
        dispose();
    }//GEN-LAST:event_bSalirMouseReleased
    
    // *********************   TABLA   ************************
    // Hacer que la tecla TAB cambie el cursor a las siguientes celdas permitidas para edición
    private void tBioquimicaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tBioquimicaKeyPressed
        int row = this.tBioquimica.getSelectedRow();
        int col = this.tBioquimica.getSelectedColumn();
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_TAB){
            if(col == 1 && row < this.tBioquimica.getRowCount()){
                row += 1;
                col = 0;
                
                this.tBioquimica.changeSelection(row, col, false, false);
            }
            else{
                this.tBioquimica.changeSelection(row, col, false, false);
            }
        }
    }//GEN-LAST:event_tBioquimicaKeyPressed

     private void iniciarTabla(){
        String query = "SELECT * FROM Bioquimica";
        String[] columnas = {"Indicadores", "Valor", "Código"};
        this.helper.setColumnsToRows(this.model, this.tBioquimica, query, columnas, 2);
        
        this.tBioquimica.getModel().addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                int row = e.getLastRow();
                int col = e.getColumn();
                if(col == 1){
                    calcularEnTabla(row);   
                }
            }
        });
    }
     
    private void calcularEnTabla(int row)
    {
        System.out.println();
    }
    
    private void bPruebasMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bPruebasMouseReleased
        /*
        String insertar_personales = getDataPersonales();
        insertarRegistro(insertar_personales);
        
        String insertar_antecedentes = getDataAntecedentes();
        insertarRegistro(insertar_antecedentes);
        
        String insertar_bioquimica = getDataBioquimica();
        insertarRegistro(insertar_bioquimica);
        */
    }//GEN-LAST:event_bPruebasMouseReleased

    
   
    // *************   OBTENER DATOS   ***********************
    private String getDataPersonales(){
        String query_buscar = "SELECT * FROM Personales";
        String key = "reg_paciente";
        int xy [] = this.helper.getColumnsAndKey(query_buscar, key);
        String [] columnas = new String[xy[1]];
        SimpleDateFormat sdf_fecha = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat sdf_hora = new SimpleDateFormat("HH:mm");
        String valores = "";
        
        // 1. OBTENER LOS DATOS DEL NUEVO REGISTRO Y CONCATENARLOS EN UN String
        int reg_paciente = xy[0] + 1;
        int paciente = Integer.parseInt(this.tfPaciente.getText());
        setIds(reg_paciente, paciente);
        
        String fecha = sdf_fecha.format(this.date);
        String hora = sdf_hora.format(this.time);
        String edad = this.tfEdad.getText();
        
        int sexo = 0;
        if(this.rbMasculino.isSelected()){
            sexo = 1;
        }
        
        int tipo = 0;
        if(this.rbCaso.isSelected()){
            tipo = 1;
        }
        
        String peso = this.tfPeso.getText();
        String talla = this.tfTalla.getText();
        String imc = this.tfIMC.getText();
        String cintura = tfCintura.getText();
        
        valores = "'" + this.reg_paciente + "', "
                + "'" + this.paciente + "', "
                + "'" + fecha + "', "
                + "'" + hora + "', "
                + "'" + edad + "', "
                + "'" + sexo + "', "
                + "'" + tipo + "', "
                + "'" + peso + "', "
                + "'" + talla + "', "
                + "'" + imc + "', "
                + "'" + cintura + "'";
        
        // 2. DEFINIR EN UN String LA SINTAXIS DEL COMANDO SQL A ENVIAR
        String insertar_personales = "INSERT INTO Personales VALUES(" + valores + ")";
        System.out.println(insertar_personales);
        return insertar_personales;
    }
    
    public int[] getIds(){
        int[] ids ={this.reg_paciente, this.paciente}; 
        return ids;
    }
    
    private void setIds(int reg_paciente, int paciente){
        this.reg_paciente = reg_paciente;
        this.paciente = paciente;
    }
    
    private String getDataAntecedentes(){
        String valores = "";
        
        // 1. OBTENER LOS DATOS DEL NUEVO REGISTRO Y CONCATENARLOS EN UN String
        int tabaco = 0;
        if(this.rbFumaSI.isSelected()){
            tabaco = 1;
        }
        
        int alcohol = 0;
        if(this.rbAlcoholSI.isSelected()){
            alcohol = 1;
        }
        
        int infarto = 0;
        if(this.rbInfartoSI.isSelected()){
            infarto = 1;
        }
        
        int angina_estable = 0;
        if(this.rbAnginaEstableSI.isSelected()){
            angina_estable = 1;
        }
        
        int angina_inestable = 0;
        if(this.rbAnginaInestableSI.isSelected()){
            angina_inestable = 1;
        }
        
        int infarto_previo = 0;
        if(this.rbInfartoPrevioSI.isSelected()){
            infarto_previo = 1;
        }
        
        int evc = 0;
        if(this.rbEVCSI.isSelected()){
            evc = 1;
        }
        
        int angina_previa = 0;
        if(this.rbAnginaPreviaSI.isSelected()){
            angina_previa = 1;
        }
        
        int hipoglicemiantes = 0;
        if(this.rbHipoglicemiantesSI.isSelected()){
            hipoglicemiantes = 1;
        }
        
        int hipolipemiantes = 0;
        if(this.rbHipolipemiantesSI.isSelected()){
            hipolipemiantes = 1;
        }
        
        int diabetes = 0;
        if(this.rbDiabetesSI.isSelected()){
            diabetes = 1;
        }
        
        valores = "'" + this.reg_paciente + "', "
                + "'" + this.paciente + "', "
                + "'" + tabaco + "', "
                + "'" + alcohol + "', "
                + "'" + infarto + "', "
                + "'" + angina_estable + "', "
                + "'" + angina_inestable + "', "
                + "'" + infarto_previo + "', "
                + "'" + evc + "', "
                + "'" + angina_previa + "', "
                + "'" + hipoglicemiantes + "', "
                + "'" + hipolipemiantes + "', "
                + "'" + diabetes + "'";
        
        // 2. DEFINIR EN UN String LA SINTAXIS DEL COMANDO SQL A ENVIAR
        String insertar_antecedentes = "INSERT INTO Antecedentes VALUES(" + valores + ")";
        System.out.println(insertar_antecedentes);
        
        return insertar_antecedentes;
    }
    
    private String getDataBioquimica(){
        String valores = "";
        int filas_bioquimica = tBioquimica.getRowCount();
        String datos_tabla = "";  
        String valor = "", codigo = "";
        // 1. OBTENER LOS DATOS DEL NUEVO REGISTRO Y CONCATENARLOS EN UN String
        
        for(int i=0; i<filas_bioquimica; i++){
            valor = (String) tBioquimica. getValueAt(i, 1);
            codigo = (String) tBioquimica.getValueAt(i, 2);
            
            if(i<filas_bioquimica-1){
                datos_tabla += valor + ", " + codigo + ", ";
            }
            else{
                datos_tabla += valor + ", " + codigo;
            } 
        }
        
        valores = "'" + reg_paciente + "', "
                + "'" + paciente + "', "
                + datos_tabla;
        
        // 2. DEFINIR EN UN String LA SINTAXIS DEL COMANDO SQL A ENVIAR
        String insertar_bioquimica = "INSERT INTO Bioquimica VALUES(" + valores + ")";
        System.out.println(insertar_bioquimica);
        return insertar_bioquimica;
    }
    
    // ****************   ALTERAR BASE DE DATOS  *****************
    private boolean insertarRegistro(String query_insertar){
        boolean r = false;
        
        r = this.helper.updateDB(query_insertar);

        return r;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Personales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Personales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Personales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Personales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Personales dialog = new Personales(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAvanzar;
    private javax.swing.JButton bPruebas;
    private javax.swing.JButton bSalir;
    private javax.swing.ButtonGroup bgAlcohol;
    private javax.swing.ButtonGroup bgAnginaEstable;
    private javax.swing.ButtonGroup bgAnginaInestable;
    private javax.swing.ButtonGroup bgAnginaPrevia;
    private javax.swing.ButtonGroup bgDiabetes;
    private javax.swing.ButtonGroup bgEVC;
    private javax.swing.ButtonGroup bgFuma;
    private javax.swing.ButtonGroup bgHipoglicemiantes;
    private javax.swing.ButtonGroup bgHipolipemiantes;
    private javax.swing.ButtonGroup bgInfarto;
    private javax.swing.ButtonGroup bgInfartoPrevio;
    private javax.swing.ButtonGroup bgSexo;
    private javax.swing.ButtonGroup bgTipo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lAlcohol;
    private javax.swing.JLabel lAnginaEstable;
    private javax.swing.JLabel lAnginaInestable;
    private javax.swing.JLabel lAnginaPrevia;
    private javax.swing.JLabel lCintura;
    private javax.swing.JLabel lDiabetes;
    private javax.swing.JLabel lEVC;
    private javax.swing.JLabel lEdad;
    private javax.swing.JLabel lFuma;
    private javax.swing.JLabel lHipoglicemiantes;
    private javax.swing.JLabel lHipolipemiantes;
    private javax.swing.JLabel lIMC;
    private javax.swing.JLabel lInfarto;
    private javax.swing.JLabel lInfartoPrevio;
    private javax.swing.JLabel lPaciente;
    private javax.swing.JLabel lPeso;
    private javax.swing.JLabel lSexo;
    private javax.swing.JLabel lTalla;
    private javax.swing.JLabel lTipo;
    private javax.swing.JRadioButton rbAlcoholNO;
    private javax.swing.JRadioButton rbAlcoholSI;
    private javax.swing.JRadioButton rbAnginaEstableNO;
    private javax.swing.JRadioButton rbAnginaEstableSI;
    private javax.swing.JRadioButton rbAnginaInestableNO;
    private javax.swing.JRadioButton rbAnginaInestableSI;
    private javax.swing.JRadioButton rbAnginaPreviaNO;
    private javax.swing.JRadioButton rbAnginaPreviaSI;
    private javax.swing.JRadioButton rbCaso;
    private javax.swing.JRadioButton rbControl;
    private javax.swing.JRadioButton rbDiabetesNO;
    private javax.swing.JRadioButton rbDiabetesSI;
    private javax.swing.JRadioButton rbEVCNO;
    private javax.swing.JRadioButton rbEVCSI;
    private javax.swing.JRadioButton rbFemenino;
    private javax.swing.JRadioButton rbFumaNO;
    private javax.swing.JRadioButton rbFumaSI;
    private javax.swing.JRadioButton rbHipoglicemiantesNO;
    private javax.swing.JRadioButton rbHipoglicemiantesSI;
    private javax.swing.JRadioButton rbHipolipemiantesNO;
    private javax.swing.JRadioButton rbHipolipemiantesSI;
    private javax.swing.JRadioButton rbInfartoNO;
    private javax.swing.JRadioButton rbInfartoPrevioNO;
    private javax.swing.JRadioButton rbInfartoPrevioSI;
    private javax.swing.JRadioButton rbInfartoSI;
    private javax.swing.JRadioButton rbMasculino;
    private javax.swing.JTable tBioquimica;
    private javax.swing.JTextField tfCintura;
    private javax.swing.JTextField tfEdad;
    private javax.swing.JTextField tfIMC;
    private javax.swing.JTextField tfPaciente;
    private javax.swing.JTextField tfPeso;
    private javax.swing.JTextField tfTalla;
    // End of variables declaration//GEN-END:variables
}
